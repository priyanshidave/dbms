1.CREATE OR REPLACE PROCEDURE factorial(x IN number)
AS
nm number;
fact number;
BEGIN
 nm:=1;
 fact:=1;
 FOR nm in 1..x LOOP
   fact:=fact*nm;
 END LOOP;
 dbms_output.put_line('Factorial of '||x||' is : '||fact);
END;
-->BEGIN
 factorial(10);
END;

3.
create or replace PROCEDURE maximum(x IN number, y IN number, z in number, M out number) IS    
BEGIN         
IF x > y and x>z THEN          
   M:= x;
ELSIF y>x and y>z then
   M:=y;
elsif z>x and z>y  then 
    M:=z;             
END IF;
 END;  
 

declare
a number(3);    
b number(3);     
c number(3); 
max number(3);
BEGIN    
a:=:n1;    
b:=:n2;
c:=:n3;   
 maximum(a, b, c,max);   
 dbms_output.put_line(' maximum: ' || max); 
END; 


demo). 
create or replace PROCEDURE findMin (x IN number, y IN number, z OUT number) IS
    
BEGIN         
IF x < y THEN              
z:= x;        
 ELSE             
 z:= y;        
 END IF;
 END;  
 

declare
a number(3);    
b number(3);     
c number(3); 

BEGIN    
a:=:n1;    
b:=:n2;
 
 findMin(a, b, c);   
 dbms_output.put_line(' Minimum  : ' || c); 
END; 


Runable)..

create or replace PROCEDURE findMin (x IN number, y IN number, z OUT number) IS
    
BEGIN         
IF x < y THEN              
z:= x;        
 ELSE             
 z:= y;        
 END IF;
 END;  
 

declare
a number(3);    
b number(3);     
c number(3); 


BEGIN    
a:=:n1;    
b:=:n2;
 
 findMin(a, b, c);   
 dbms_output.put_line(' Minimum  : ' || c); 
END; 



create or replace PROCEDURE maximum(x IN number, y IN number, z in number, p out number) IS 
   
BEGIN         
IF x > y and x>z THEN          
   p:= x;
ELSIF y > x and y>z then
   p:=y;
elsif z > x and z>y  then 
    p:=z;     
else 
    dbms_output.put_line(p);        
END IF;
END;  


declare
   a number(3);    
   b number(3);     
   c number(3); 
   m number(3);
BEGIN    
   a:=:n1;    
   b:=:n2;
   c:=:n3;   
   maximum(a, b, c, m);   
   dbms_output.put_line(' maximum: ' || m); 
END; 
